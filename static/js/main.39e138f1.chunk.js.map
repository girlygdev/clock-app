{"version":3,"sources":["components/BackgroundImage.js","components/BlockQuote.js","components/CurrentTime.js","components/Details.js","App.js","index.js"],"names":["BackgroundImage","refresh","useState","imgSrc","setImageSrc","useEffect","axios","get","params","client_id","then","result","console","log","fullImageLink","data","urls","regular","localStorage","setItem","userBg","getItem","className","src","alt","BlockQuote","quote","setQuote","author","setAuthor","response","quotes","text","userMessage","userAuthor","CurrentTime","country","moment","format","time","setTime","greeting","setGreeting","getTime","setInterval","hour","getGreeting","clearInterval","Details","weatherData","tz","guess","sunrise","sunset","minTemp","maxTemp","App","showDetails","setShowDetails","setCountry","requestNewData","setRequestNewData","weather","countryAbbrev","setWeatherData","latitude","longitude","coordinates","setCoordinates","date","navigator","geolocation","permissions","query","name","state","setUserCoordinates","appid","lat","lon","units","info","sunriseUnix","sys","sunsetUnix","main","temp_min","temp_max","getCurrentPosition","position","coords","errors","enableHighAccuracy","timeout","maximumAge","onClick","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39e138f1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst BackgroundImage = ( { refresh = false }) => {\r\n  const [imgSrc, setImageSrc] = useState('')  \r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      axios.get('https://api.unsplash.com/photos/random', {\r\n        params: {\r\n          client_id: \"noJECr-bg2gyA6NS2r__M9tUcvhP8bAf3iuziUZ4f9I\"\r\n        }\r\n      }).then(result => {\r\n        console.log(result)\r\n  \r\n        const response = result.data\r\n        const fullImageLink = response.urls.regular\r\n  \r\n        setImageSrc(fullImageLink)\r\n\r\n        // save to local storage\r\n        localStorage.setItem('clockAppUserData-bg', fullImageLink)\r\n      })\r\n    } else {\r\n      const userBg = localStorage.getItem('clockAppUserData-bg')\r\n      \r\n      if (userBg) {\r\n        setImageSrc(userBg)\r\n      }\r\n    }    \r\n  }, [refresh])\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <img src={imgSrc} alt=\"Clock Background\" className=\"background__img\"/> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BackgroundImage\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst BlockQuote = ({ refresh = false}) => {\r\n  const [quote, setQuote] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (refresh) {\r\n      axios.get(`https://goquotes-api.herokuapp.com/api/v1/random?count=1`)\r\n      .then(result => {\r\n        const response = result.data\r\n        setQuote(response.quotes[0].text)\r\n        setAuthor(response.quotes[0].author)        \r\n\r\n        // save to local storage\r\n        localStorage.setItem('clockAppUserData-quote', response.quotes[0].text)\r\n        localStorage.setItem('clockAppUserData-author', response.quotes[0].author)\r\n      })\r\n    } else {\r\n      const userMessage = localStorage.getItem('clockAppUserData-quote')\r\n      const userAuthor = localStorage.getItem('clockAppUserData-author')      \r\n\r\n      if (userMessage) {\r\n        setQuote(userMessage)\r\n        setAuthor(userAuthor)\r\n      }\r\n    }    \r\n  }, [refresh])\r\n\r\n  return (\r\n    <section className=\"quote\">\r\n      <p className=\"quote__message\">\r\n        {quote}\r\n      </p>\r\n      <p className=\"quote__author\">\r\n        by {author}\r\n      </p>    \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BlockQuote\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\n\r\nconst CurrentTime = ( { country }) => {\r\n  const [time, setTime] = useState(moment().format('hh:mm A'))\r\n  const [greeting, setGreeting] = useState('Hi')\r\n\r\n  const getTime = () => {\r\n    setTime(moment().format('hh:mm A'))\r\n  }\r\n\r\n  const getGreeting = () => {\r\n    const hour = moment().format('HH')\r\n\r\n    if (hour >= 4 && hour < 12) {\r\n      setGreeting('Good morning')\r\n    } else if (hour >= 12 && hour < 16) {\r\n      setGreeting('Good afternoon')\r\n    } else if (hour >= 16 && hour < 20) {\r\n      setGreeting('Good evening')\r\n    } else if (hour >= 20 && hour < 4) {\r\n      setGreeting('Good night')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const time = setInterval(getTime, 1000)\r\n    getGreeting()\r\n\r\n    return () => clearInterval(time)\r\n  })\r\n\r\n  return (\r\n    <div className=\"day\">\r\n      <div className=\"day__greeting\">\r\n        <i className=\"fas fa-cloud-sun\"></i> {' '}\r\n        {greeting}, it's currently\r\n      </div>\r\n      <div className=\"day__time\">\r\n        <div className=\"day__time__value\">{time}</div>       \r\n      </div>\r\n      <div className=\"day__loc\">\r\n        {country}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrentTime\r\n","import React from 'react'\r\nimport moment from 'moment-timezone'\r\n\r\nconst Details = ({ weatherData }) => {  \r\n  return (\r\n    <div className=\"info\">\r\n      <div className=\"info__item\">\r\n        <div className=\"info__item__label\">current timezone</div>\r\n        <div className=\"info__item__value\">{moment.tz.guess()}</div>\r\n      </div>\r\n\r\n      <div className=\"info__item\">\r\n        <div className=\"info__item__label\">current date</div>\r\n        <div className=\"info__item__value\">{moment().format('ddd, DD MMMM YYYY')}</div>\r\n      </div>\r\n\r\n      <div className=\"info__item\">\r\n        <div className=\"info__item__label\">sunrise | sunset</div>\r\n        <div className=\"info__item__value\">{weatherData.sunrise} | {weatherData.sunset}</div>\r\n      </div>\r\n\r\n      <div className=\"info__item\">\r\n        <div className=\"info__item__label\">reel feel</div>\r\n        <div className=\"info__item__value\">{weatherData.minTemp}&deg; | {weatherData.maxTemp}&deg;Celsius</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","\nimport React, { useState, useEffect } from 'react'\nimport BackgroundImage from './components/BackgroundImage'\nimport BlockQuote from './components/BlockQuote'\nimport CurrentTime from './components/CurrentTime'\nimport Details from './components/Details'\n\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst App = () => {\n  const [showDetails, setShowDetails] = useState(0)\n  const [country, setCountry] = useState('')\n  const [requestNewData, setRequestNewData] = useState(false)\n  const [weatherData, setWeatherData] = useState({\n    minTemp: 0,\n    maxTemp: 0,\n    weather: '',\n    sunrise: '',\n    sunset: '',\n    countryAbbrev: 'PH'\n  })\n  const [coordinates, setCoordinates] = useState({\n    latitude: 15.4827722,\n    longitude: 120.7120023\n  })\n\n  useEffect(() => {\n    // save user on browser local storage\n    if (localStorage.getItem('clockAppUserData-date')) {    \n      const date = localStorage.getItem('clockAppUserData-date')\n\n      if (moment().format('YYYY-MM-DD') !== date) {\n        setRequestNewData(true)\n      }\n    } else {\n      // setup defaults\n      setRequestNewData(true)\n      localStorage.setItem('clockAppUserData-status', 'existing')\n      localStorage.setItem('clockAppUserData-date', moment().format('YYYY-MM-DD'))\n      localStorage.setItem('clockAppUserData-quote', 'Whatever your goal in life, unless you develop a great urgency, what could be near will be far away.')\n      localStorage.setItem('clockAppUserData-author', 'Anon')\n      localStorage.setItem('clockAppUserData-bg', \"https://images.unsplash.com/photo-1627133935524-6b60fa3f5fdf?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNTI2NzN8MHwxfHJhbmRvbXx8fHx8fHx8fDE2Mjk0NDA4OTk&ixlib=rb-1.2.1&q=80&w=1080\")\n    }\n  }, [])\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      // check for user permissions\n      navigator.permissions\n        .query({ name: \"geolocation\"})\n        .then(result => {\n          const permissionType = result.state\n\n          switch(permissionType) {\n            case 'granted' :\n              setUserCoordinates()\n              break;\n            \n            case 'prompt' :\n              setUserCoordinates()\n              break;\n\n            case 'denied' :\n              break;\n\n            default:\n              break;\n          }          \n        })\n    } else {\n      console.log('Geolocation API is not supported by browser')\n    }\n  }, [])\n\n  useEffect(() => {\n    axios.get(`https://restcountries.eu/rest/v2/alpha/${weatherData.countryAbbrev}`)\n    .then(response => {\n      const data = response.data\n      setCountry(data.name)\n    })\n  }, [weatherData])\n\n  useEffect(() => {    \n    axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n      params: {\n        appid: \"48e720c185c515eee33e2cd291197d33\",\n        lat: coordinates.latitude,\n        lon: coordinates.longitude,\n        units: \"metric\"\n      }\n    })\n    .then(response => {\n      const info = response.data\n\n      const sunriseUnix = info.sys.sunrise * 1000\n      const sunsetUnix = info.sys.sunset * 1000\n      const countryAbbrev = info.sys.country\n\n      const data = {\n        minTemp: info.main.temp_min,\n        maxTemp: info.main.temp_max,\n        sunrise: moment(sunriseUnix).format('hh:mm A'),\n        sunset: moment(sunsetUnix).format('hh:mm A'),\n        countryAbbrev: countryAbbrev\n      }\n\n      setWeatherData(data)\n    })\n  }, [coordinates])\n\n  const setUserCoordinates = () => {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setCoordinates({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      })      \n    }, function(errors) {\n      console.log(errors)\n    }, {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0,\n    });\n  }\n\n  const clearUserData = () => {\n    localStorage.removeItem('clockAppUserData-status')\n    localStorage.removeItem('clockAppUserData-date')\n    localStorage.removeItem('clockAppUserData-quote')\n    localStorage.removeItem('clockAppUserData-author')\n    localStorage.removeItem('clockAppUserData-bg')\n  }\n\n  return (\n    <div className=\"App\">\n      <BackgroundImage refresh={requestNewData}/>\n      <BlockQuote refresh={requestNewData}/>\n\n      <div className={`main ${showDetails ? 'open' : ''}`}>\n        {/* Get Time based on users browser */}\n        <CurrentTime country={country} />\n\n        {/* Show weather and other info based on detected user location */}\n        <section className={`details ${showDetails ? 'open' : ''}`}>\n          <div className=\"actions\">\n            <button className=\"actions__btn\" onClick={() => setShowDetails(!showDetails)}>\n              more <i className=\"fas fa-arrow-up icon-arrow\"></i>\n            </button>\n            <button className=\"actions__btn\" onClick={clearUserData}>\n              clear user data <i className=\"fas fa-times icon-arrow\"></i>\n            </button>\n          </div>\n\n          <Details weatherData={weatherData}/>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}